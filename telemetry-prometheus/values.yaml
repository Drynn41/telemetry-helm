prometheus:
  persistence:
    name: prometheus-pv
    storageClass: "prometheus-storage"
    capacity: "1Gi"  # Adjust the size as necessary
  replicaCount: 1
  image: "prom/prometheus"
  services:
    prometheus:
      type: ClusterIP
      port: 9090
  resources:
      requests:
        memory: "512M"       # Le conteneur demande au moins 1 Go de RAM
        cpu: "500m"         # Le conteneur demande 0.5 vCPU (un demi processeur)
      limits:
        memory: "2Gi"       # Le conteneur ne pourra pas utiliser plus de 2 Go de RAM
        cpu: "1"            # Le conteneur ne pourra pas utiliser plus de 1 vCPU (un processeur complet)
  args:
    - "--config.file=/etc/prometheus/prometheus.yml"
    - "--storage.tsdb.path=/data"
    - "--storage.tsdb.retention.time=365d"
    - "--web.enable-lifecycle"
    - "--web.enable-remote-write-receiver"
  config: |
    ---
    # my global config
    global:
      scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # scrape_timeout is set to the global default (10s).

    # Alertmanager configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              # - alertmanager:9093

    # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
    rule_files:
      - "/etc/prometheus/rules/rules.yml"
      # - "second_rules.yml"

    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: "prometheus"

        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.

        static_configs:
          - targets: ["localhost:9090"]
          # The label name is added as a label `label_name=<label_value>` to any timeseries scraped from this config.
            labels:
              app: "prometheus"
  rules: |-
    groups:
      - name: baseOS
        rules:
          - alert: HighCPUUsage
            expr: sum(rate(container_cpu_usage_seconds_total[5m])) by (instance) > 0.8
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is above 80% for more than 5 minutes."